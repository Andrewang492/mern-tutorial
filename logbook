lesson3
Learnt how to set up mongoDB.
Need to install mongoose package.
Learnt about environment variables using dotenv package.
Created Note and User models. These are schemas for MongoDB.

lesson04
add routing for User model/schema. Need routing and controllers.
install express-asyc-handler and bcrypt.
Creating a controller (CRUD method for a route)
Using Postman to test API.
process: route in server.js. Create route in directory. Create the controller method.

lesson 8
Auth - needed to create verifyJWT, install jwt and make changes to controllers.
Add the middleware usage to all routes of UserRoutes and NotesRoutes.
Created a loginlimiter middleware.
For postman, remove the secure tag from a cookie since in development using http, not https.
Creating tokens with jwt has expiry time given by 'expiresIn'.

lesson 9 (frontend )
Created Login page, and authSlice and authApiSlice.

lesson 10
Made changes so that would use the token to make requests.
Tried to automaticallly use the refresh token if it could if the access token expired. 
Added optional persistence to keep everything there if you pressed refresh. Needed to create a wrapper for App.js. Created the toggle for users to select.

lesson 11
Changed features so that it depends on your role. Created this useAuth hook that is used frequently to see who the logged in user is and their roles. Use jwt decode, and useSelector to find current token of logged in person for information.
Created a requireAuth wrapper that stops pages from showing if the person is not logged in.

lesson 12
refactored a bit - user model's roles changed. 
Can stop using async handler to require('express-async-errors'). Then you don't need to do any asyncHandler wrapping, just require at top of server.js and its done.
In frontend, changed prefetching somehow... and changed useSelector in Note.js, User.js, EditNote.js, NewNote.js to do a query instead.
Memoised User and Note so doesnt rerender all the time.
Can set title on different pages now, and can put loading spinner where appropriate.

lesson 13 deployment
Get fvilers disable react devtools to stop devtools (in index.js)
Change store.js to remove redux devtools.
Change url in apiSlice to technotes-api.onrender.com